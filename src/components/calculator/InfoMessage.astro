---
export interface Props {
  type: 'info' | 'success' | 'warning' | 'error';
  dismissible?: boolean;
}

const { type, dismissible = true } = Astro.props;

const icons = {
  info: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg>',
  success: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>',
  warning: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>',
  error: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg>'
};
---

<div class={`info-message info-${type}`} role="alert" id={dismissible ? 'dismissible-message' : undefined}>
  <div class="info-content">
    <div class="info-icon" set:html={icons[type]}></div>
    <div class="info-text">
      <slot />
    </div>
  </div>
  {dismissible && (
    <button class="dismiss-button" aria-label="Cerrar mensaje">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  )}
</div>

<script>
  const dismissButton = document.querySelector('.dismiss-button');
  const messageElement = document.getElementById('dismissible-message');
  
  if (dismissButton && messageElement) {
    dismissButton.addEventListener('click', () => {
      messageElement.classList.add('dismissed');
      setTimeout(() => {
        messageElement.style.display = 'none';
      }, 300);
    });
  }
</script>

<style>
  .info-message {
    border-radius: 6px;
    padding: 1rem;
    margin: 1rem 0;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    transition: all 0.3s ease;
  }
  
  .info-content {
    display: flex;
    gap: 0.75rem;
    align-items: flex-start;
  }
  
  .info-icon {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .info-text {
    flex-grow: 1;
    font-size: 0.95rem;
    line-height: 1.5;
  }
  
  .info-info {
    background-color: rgba(37, 99, 235, 0.1);
    border-left: 4px solid var(--button-color);
    color: #1E40AF;
  }
  
  .info-success {
    background-color: rgba(34, 197, 94, 0.1);
    border-left: 4px solid var(--success-color);
    color: #166534;
  }
  
  .info-warning {
    background-color: rgba(249, 115, 22, 0.1);
    border-left: 4px solid var(--formula-color);
    color: #C2410C;
  }
  
  .info-error {
    background-color: rgba(239, 68, 68, 0.1);
    border-left: 4px solid var(--error-color);
    color: #B91C1C;
  }
  
  .dismiss-button {
    background: transparent;
    border: none;
    cursor: pointer;
    color: currentColor;
    opacity: 0.7;
    transition: opacity 0.2s;
    display: flex;
    padding: 0.25rem;
    margin: -0.25rem;
    border-radius: 4px;
  }
  
  .dismiss-button:hover {
    opacity: 1;
    background-color: rgba(0, 0, 0, 0.05);
  }
  
  .dismissed {
    opacity: 0;
    transform: translateY(-10px);
  }
</style>
